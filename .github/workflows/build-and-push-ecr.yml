on:
  pull_request:
    types: [closed]   # fires when PR is closed (merged or not)

jobs:
  build:
    if: ${{ github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'}}  # only merged PRs
    runs-on: ubuntu-latest
    permissions: 
        contents: write
        pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.merge_commit_sha }}  # checkout the merge commit

      - name: Decide bump from merge commit message
        run: |
          CUR="$(cat version | tr -d '\r\n')"
          MAJOR=$(echo "$CUR" | cut -d. -f1)
          MINOR=$(echo "$CUR" | cut -d. -f2)
          PATCH=$(echo "$CUR" | cut -d. -f3)
          LOG="$(git log -1 --format=%B)"

          # Case-insensitive match for keywords
          shopt -s nocasematch
          if [[ "$LOG" == *major* ]]; then
            ((MAJOR++)); MINOR=0; PATCH=0
          elif [[ "$LOG" == *minor* ]]; then
            ((MINOR++)); PATCH=0
          else
            ((PATCH++))
          fi
          shopt -u nocasematch

          NEXT="${MAJOR}.${MINOR}.${PATCH}"

          echo "Current: $CUR"
          echo "Next:    $NEXT"

          # Write new version to file & expose to later steps
          echo "$NEXT" > version
          echo "next=$NEXT" >> "$GITHUB_OUTPUT"

      - name: push new version file to git
        run: |
          set -euo pipefail
          if ! git diff --quiet -- version; then
            git config user.name "${{ secrets.USERNAME  }}"
            git config user.email "${{ secrets.EMAIL }}"
            git add version
            git commit -m "updated version file"
            git push origin HEAD:main
          else
            echo "Version file already up to data, skipping commit"
          fi

      - name: Make poll request script executable
        run: chmod +x pr_main_to_feature.sh
        
      - name: invokes pull request if the branch is main
        if: github.ref == 'refs/heads/main'
        env:
            ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
            GITHUB_HEAD_REF: ${{ github.head_ref }}
            GITHUB_REF_NAME: ${{ github.ref_name }}
        run: ./pr_main_to_feature_branch.sh
          